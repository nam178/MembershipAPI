//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Membership.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Text {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Text() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Membership.Core.Text", typeof(Text).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Client ID/Secret provided..
        /// </summary>
        internal static string Authentication_BasicAuthClientPasswordNotMatchErrorMessage {
            get {
                return ResourceManager.GetString("Authentication_BasicAuthClientPasswordNotMatchErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal server error, please try again later.
        /// </summary>
        internal static string Authentication_BasicAuthFatalErrorMessage {
            get {
                return ResourceManager.GetString("Authentication_BasicAuthFatalErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect credential provided.
        /// </summary>
        internal static string Authentication_BasicAuthIncorrectCredentialErrorMessage {
            get {
                return ResourceManager.GetString("Authentication_BasicAuthIncorrectCredentialErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication header is missing.
        /// </summary>
        internal static string Authentication_BasicAuthInvalidAuthHeaderErrorMessage {
            get {
                return ResourceManager.GetString("Authentication_BasicAuthInvalidAuthHeaderErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must supply Authorization header.
        /// </summary>
        internal static string Authentication_BasicAuthMissingAuthHeaderErrorMessage {
            get {
                return ResourceManager.GetString("Authentication_BasicAuthMissingAuthHeaderErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Client ID/Secret provided..
        /// </summary>
        internal static string Authentication_BasicAuthNoClientIdErrorMessage {
            get {
                return ResourceManager.GetString("Authentication_BasicAuthNoClientIdErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User with provided name already exist.
        /// </summary>
        internal static string CreateUserService_UserExists {
            get {
                return ResourceManager.GetString("CreateUserService_UserExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find user with id {0}.
        /// </summary>
        internal static string DeactivationService_FailedToFindUserById {
            get {
                return ResourceManager.GetString("DeactivationService_FailedToFindUserById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only administrator can deactivate users..
        /// </summary>
        internal static string DeactivationService_OnlyAdminCanDeactivate {
            get {
                return ResourceManager.GetString("DeactivationService_OnlyAdminCanDeactivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal server error, please try again later.
        /// </summary>
        internal static string GenericInternalServerErrorMessage {
            get {
                return ResourceManager.GetString("GenericInternalServerErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication header is in valid format. Must be &apos;Beaer &lt;TOKEN&gt;&apos;.
        /// </summary>
        internal static string MemberAuthenticationService_AuthHeaderInvalidFormat {
            get {
                return ResourceManager.GetString("MemberAuthenticationService_AuthHeaderInvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication header is missing.
        /// </summary>
        internal static string MemberAuthenticationService_MissingAuthHeader {
            get {
                return ResourceManager.GetString("MemberAuthenticationService_MissingAuthHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied token is expired.
        /// </summary>
        internal static string MemberAuthenticationService_TokenExpired {
            get {
                return ResourceManager.GetString("MemberAuthenticationService_TokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supplied token is not found.
        /// </summary>
        internal static string MemberAuthenticationService_TokenNotFound {
            get {
                return ResourceManager.GetString("MemberAuthenticationService_TokenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find user associated with the supplied token.
        /// </summary>
        internal static string OAuthPasswordGrantService_CantFindUserAssociatedWithToken {
            get {
                return ResourceManager.GetString("OAuthPasswordGrantService_CantFindUserAssociatedWithToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot request access token for users from other applications
        ///.
        /// </summary>
        internal static string OAuthPasswordGrantService_CrossApplicationGrantNotPermittedErrorMessage {
            get {
                return ResourceManager.GetString("OAuthPasswordGrantService_CrossApplicationGrantNotPermittedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect password.
        /// </summary>
        internal static string OAuthPasswordGrantService_IncorrectPasswordErrorMessage {
            get {
                return ResourceManager.GetString("OAuthPasswordGrantService_IncorrectPasswordErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No user found with name {0}.
        /// </summary>
        internal static string OAuthPasswordGrantService_NoUserWithProvidedNameErrorMessage {
            get {
                return ResourceManager.GetString("OAuthPasswordGrantService_NoUserWithProvidedNameErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This user account was deactivated.
        /// </summary>
        internal static string OAuthPasswordGrantService_UserDeactivated {
            get {
                return ResourceManager.GetString("OAuthPasswordGrantService_UserDeactivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect current password supplied.
        /// </summary>
        internal static string UpdatePasswordService_IncorrectCurrentPassword {
            get {
                return ResourceManager.GetString("UpdatePasswordService_IncorrectCurrentPassword", resourceCulture);
            }
        }
    }
}
